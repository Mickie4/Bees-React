{"ast":null,"code":"var _jsxFileName = \"/Users/mmc/Documents/GitHub/Bees-React/my-app/src/components/AttackBtn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AttackBtn() {\n  _s();\n\n  const [attackInfo, setAttackInfo] = useState({});\n  let secretNumber = Math.trunc(Math.random() * 100) + 1;\n\n  function Attack(event) {\n    event.preventDefault();\n    setAttackPower(secretNumber);\n    setHealth(health - secretNumber);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"attack-btn\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: Attack,\n      children: \"Attack!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AttackBtn, \"bUIRA8E1z5H4dqAhvWrUvmqUpJ4=\");\n\n_c = AttackBtn;\n\nvar _c;\n\n$RefreshReg$(_c, \"AttackBtn\");","map":{"version":3,"sources":["/Users/mmc/Documents/GitHub/Bees-React/my-app/src/components/AttackBtn.js"],"names":["React","useState","AttackBtn","attackInfo","setAttackInfo","secretNumber","Math","trunc","random","Attack","event","preventDefault","setAttackPower","setHealth","health"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAClC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BH,QAAQ,CAAC,EAAD,CAA5C;AACA,MAAII,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,IAAkC,CAArD;;AAEA,WAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACrBA,IAAAA,KAAK,CAACC,cAAN;AACAC,IAAAA,cAAc,CAACP,YAAD,CAAd;AACAQ,IAAAA,SAAS,CAACC,MAAM,GAAGT,YAAV,CAAT;AACD;;AACD,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACE;AAAQ,MAAA,OAAO,EAAEI,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAduBP,S;;KAAAA,S","sourcesContent":["import React, { useState } from \"react\";\n\nexport default function AttackBtn() {\n  const [attackInfo, setAttackInfo] = useState({});\n  let secretNumber = Math.trunc(Math.random() * 100) + 1;\n\n  function Attack(event) {\n    event.preventDefault();\n    setAttackPower(secretNumber);\n    setHealth(health - secretNumber);\n  }\n  return (\n    <div className='attack-btn'>\n      <button onClick={Attack}>Attack!</button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}